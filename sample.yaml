AWSTemplateFormatVersion: 2010-09-09
Parameters: 
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro 
  ImageId:
    Description: AMI
    Type: AWS::EC2::Image::Id
    Default: ami-058e6df85cfc7760b
  KeyName:
    Description: Key pair. Must be created manualy
    Type: AWS::EC2::KeyPair::KeyName    
  Vpc:
    Type: AWS::EC2::VPC::Id    
  Subnet:
    Type: AWS::EC2::Subnet::Id   
  BackupVaultName:
    Type: String
    Default: Default
  RecoveryPointArn:
    Type: String
  TemplateURL:
    Type: String
    MinLength: 1   
    Description: URL for template.yaml. Should be in S3 
    Default: https://s3.eu-central-1.amazonaws.com/aos.bucket/template.yaml
  PerformanceMode:
    Type: String
    AllowedValues:
      - generalPurpose
      - maxIO
    Default: generalPurpose  
  TransitionToIA:
    Type: String
    AllowedValues:
      - NONE
      - AFTER_14_DAYS
      - AFTER_30_DAYS
      - AFTER_60_DAYS
      - AFTER_7_DAYS
      - AFTER_90_DAYS
    Default: NONE   
  TransitionToPrimaryStorageClass:
    Type: String
    AllowedValues:
      - NONE
      - AFTER_1_ACCESS  
    Default: NONE   
  Encrypted:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"  
  KmsKeyId:
    Type: String
Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:       
        ImageId: !Ref ImageId       
        InstanceType: !Ref InstanceType     
        KeyName: !Ref KeyName       
        SecurityGroupIds:  
          - !Ref EC2SecurityGroup  
        UserData: !Base64 
          Fn::Sub: 
            - |
              #!/bin/bash
              yum update -y
              yum install -y amazon-efs-utils
              mkdir /home/ec2-user/efs 
              mount -t efs -o tls,accesspoint=${AccessPoint} ${EFS}:/ /home/ec2-user/efs            
            - EFS: !GetAtt Efs.Outputs.FileSystemId   
  
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH trafic      
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0        
      VpcId: !Ref Vpc
  
  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow trafic from EC2SecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref EC2SecurityGroup
      VpcId: !Ref Vpc
        
  Efs:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BackupVaultName: !Ref BackupVaultName
        RecoveryPointArn: !Ref RecoveryPointArn
        Subnet: !Ref Subnet
        SecurityGroup: !Ref EfsSecurityGroup 
        Vpc: !Ref Vpc
        PerformanceMode: !Ref PerformanceMode
        TransitionToIA: !Ref TransitionToIA
        TransitionToPrimaryStorageClass: !Ref TransitionToPrimaryStorageClass
        Encrypted: !Ref Encrypted
        KmsKeyId: !Ref KmsKeyId
      TemplateURL: !Ref TemplateURL

  AccessPoint:
    Type: 'AWS::EFS::AccessPoint'
    Properties:
      FileSystemId: !GetAtt Efs.Outputs.FileSystemId
      # Give full access. "0" is root user
      PosixUser:
        Gid: 0
        Uid: 0
      RootDirectory:
        Path: /    
  
  Ec2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate    
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      SubnetId: !Ref Subnet
  