{
    "Comment": "A description of my state machine",
    "StartAt": "Pass",
    "States": {
      "Pass": {
        "Type": "Pass",
        "Next": "GetRecoveryPointRestoreMetadata",
        "Result": {
          "BackupVaultName": "Default",
          "RecoveryPointArn": "arn:aws:backup:eu-central-1:918404900336:recovery-point:e8e6617c-7aaa-43d4-b5c1-d6d9f8e81945",
          "PerformanceMode": "generalPurpose",
          "IamRoleArn": "arn:aws:iam::918404900336:role/role-test1",
          "StackName": "s5"
        }
      },
      "GetRecoveryPointRestoreMetadata": {
        "Type": "Task",
        "Next": "StartRestoreJob",
        "Parameters": {
          "BackupVaultName.$": "$.BackupVaultName",
          "RecoveryPointArn.$": "$.RecoveryPointArn"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:getRecoveryPointRestoreMetadata",
        "ResultPath": "$.GetRecoveryPointRestoreMetadataResult"
      },
      "StartRestoreJob": {
        "Type": "Task",
        "Parameters": {
          "IamRoleArn.$": "$.IamRoleArn",
          "Metadata": {
            "file-system-id.$": "$.GetRecoveryPointRestoreMetadataResult.RestoreMetadata.file-system-id",
            "Encrypted": "false",
            "PerformanceMode.$": "$.PerformanceMode",
            "CreationToken.$": "$.GetRecoveryPointRestoreMetadataResult.RestoreMetadata.aws:backup:request-id",
            "newFileSystem": "true"
          },
          "RecoveryPointArn.$": "$.RecoveryPointArn",
          "ResourceType": "EFS"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:startRestoreJob",
        "Next": "DescribeRestoreJob",
        "ResultPath": "$.StartRestoreJobResult"
      },
      "DescribeRestoreJob": {
        "Type": "Task",
        "Parameters": {
          "RestoreJobId.$": "$.StartRestoreJobResult.RestoreJobId"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:describeRestoreJob",
        "Next": "Wait 10 sec job completed",
        "ResultPath": "$.DescribeRestoreJobResult"
      },
      "Wait 10 sec job completed": {
        "Type": "Wait",
        "Seconds": 5,
        "Next": "Restore Job Completed?"
      },
      "Restore Job Completed?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.DescribeRestoreJobResult.Status",
            "StringEquals": "COMPLETED",
            "Next": "UpdateStack"
          }
        ],
        "Default": "DescribeRestoreJob"
      },
      "UpdateStack": {
        "Type": "Task",
        "Next": "Wait for stack updated",
        "Parameters": {
          "StackName.$": "$.StackName",
          "UsePreviousTemplate": true,
          "Capabilities": [
            "CAPABILITY_IAM"
          ],
          "Parameters": [
            {
              "ParameterKey": "EFS",
              "ParameterValue.$": "$.GetRecoveryPointRestoreMetadataResult.RestoreMetadata.file-system-id"
            }
          ]
        },
        "Resource": "arn:aws:states:::aws-sdk:cloudformation:updateStack",
        "ResultPath": "$.UpdateStackResult"
      },
      "Wait for stack updated": {
        "Type": "Wait",
        "Seconds": 10,
        "Next": "DescribeStacks"
      },
      "DescribeStacks": {
        "Type": "Task",
        "Next": "Stack is updated?",
        "Parameters": {
          "StackName.$": "$.UpdateStackResult.StackId"
        },
        "Resource": "arn:aws:states:::aws-sdk:cloudformation:describeStacks",
        "ResultPath": "$.DescribeStacksResult"
      },
      "Stack is updated?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.DescribeStacksResult.Stacks[0].StackStatus",
            "StringEquals": "UPDATE_COMPLETE",
            "Next": "Lambda Invoke"
          }
        ],
        "Default": "Wait for stack updated"
      },
      "Lambda Invoke": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName.$": "$.DescribeStacksResult.Stacks[0].Outputs[0].OutputValue"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next": "UpdateStack2",
        "ResultPath": "$.LambdaResult"
      },
      "UpdateStack2": {
        "Type": "Task",
        "Next": "Wait for stack updated 2",
        "Parameters": {
          "StackName.$": "$.StackName",
          "UsePreviousTemplate": true,
          "Capabilities": [
            "CAPABILITY_IAM"
          ],
          "Parameters": [
            {
              "ParameterKey": "EFS",
              "ParameterValue": ""
            }
          ]
        },
        "Resource": "arn:aws:states:::aws-sdk:cloudformation:updateStack",
        "ResultPath": "$.UpdateStack2Result"
      },
      "Wait for stack updated 2": {
        "Type": "Wait",
        "Seconds": 10,
        "Next": "DescribeStacks2"
      },
      "DescribeStacks2": {
        "Type": "Task",
        "Next": "Stack is updated? 2",
        "Parameters": {
          "StackName.$": "$.UpdateStack2Result.StackId"
        },
        "Resource": "arn:aws:states:::aws-sdk:cloudformation:describeStacks",
        "ResultPath": "$.DescribeStacks2Result"
      },
      "Stack is updated? 2": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.DescribeStacks2Result.Stacks[0].StackStatus",
            "StringEquals": "UPDATE_COMPLETE",
            "Next": "Wait"
          }
        ],
        "Default": "Wait for stack updated 2"
      },
      "Wait": {
        "Type": "Wait",
        "Seconds": 5,
        "End": true
      }
    }
  }