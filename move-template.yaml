AWSTemplateFormatVersion: 2010-09-09
Resources:
  Moving:
   Type: Custom::Moving
   Properties: 
     ServiceToken: !GetAtt LambdaMoveBackupFolderToRootEFS.Arn

  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
        - 'arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadWriteAccess'

  LambdaMoveBackupFolderToRootEFS:
    Type: 'AWS::Lambda::Function' 
    Properties:
      Code:
        ZipFile: |
          const { execSync } = require('child_process');
          var response = require('cfn-response');
          exports.handler = function (event, context) {            
            if (event.RequestType == "Create") {
              try {
                execSync('shopt -s dotglob');       
                console.log("execSync is ok, sending SUCCESS");
                response.send(event, context, response.SUCCESS);              
              } catch(e) {
                console.log("error execSync, sending FAILED");
                response.send(event, context, response.FAILED);
              }    
            }  
            else { 
              console.log("RequestType is not CREATE, send SUCCESS");
              response.send(event, context, response.SUCCESS);           
            }
          };

      Environment:
        Variables:
          mountPath: /mnt/efs
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs14.x
      Handler: index.handler
      Timeout: 30
      