{
    "Comment": "A description of my state machine",
    "StartAt": "Choice of action",
    "States": {
      "Choice of action": {
        "Type": "Choice",
        "Choices": [
          {
            "Or": [
              {
                "And": [
                  {
                    "Variable": "$.RequestType",
                    "StringEquals": "Create"
                  },
                  {
                    "Variable": "$.ResourceProperties.Restore",
                    "BooleanEquals": false
                  }
                ]
              },
              {
                "And": [
                  {
                    "Variable": "$.RequestType",
                    "StringEquals": "Update"
                  },
                  {
                    "Variable": "$.ResourceProperties.Restore",
                    "BooleanEquals": false
                  },
                  {
                    "Variable": "$.OldResourceProperties.Restore",
                    "BooleanEquals": true
                  }
                ]
              }
            ],
            "Next": "CreateFileSystem"
          },
          {
            "Or": [
              {
                "And": [
                  {
                    "Variable": "$.RequestType",
                    "StringEquals": "Create"
                  },
                  {
                    "Variable": "$.ResourceProperties.Restore",
                    "BooleanEquals": true
                  }
                ]
              },
              {
                "And": [
                  {
                    "Variable": "$.RequestType",
                    "StringEquals": "Update"
                  },
                  {
                    "Variable": "$.ResourceProperties.Restore",
                    "BooleanEquals": true
                  },
                  {
                    "Variable": "$.OldResourceProperties.Restore",
                    "BooleanEquals": false
                  }
                ]
              },
              {
                "And": [
                  {
                    "Variable": "$.RequestType",
                    "StringEquals": "Update"
                  },
                  {
                    "Variable": "$.ResourceProperties.Restore",
                    "BooleanEquals": true
                  },
                  {
                    "Variable": "$.OldResourceProperties.Restore",
                    "BooleanEquals": true
                  },
                  {
                    "Not": {
                      "Variable": "$.OldResourceProperties.RecoveryPoint",
                      "StringEqualsPath": "$.ResourceProperties.RecoveryPoint"
                    }
                  }
                ]
              }
            ],
            "Next": "GetRecoveryPointRestoreMetadata"
          },
          {
            "Variable": "$.RequestType",
            "StringEquals": "Update",
            "Next": "UpdateFileSystem"
          },
          {
            "Variable": "$.RequestType",
            "StringEquals": "Delete",
            "Next": "DeleteFileSystem"
          }
        ]
      },
      "GetRecoveryPointRestoreMetadata": {
        "Type": "Task",
        "Next": "StartRestoreJob",
        "Parameters": {
          "BackupVaultName.$": "$.ResourceProperties.BackupVaultName",
          "RecoveryPointArn.$": "$.ResourceProperties.RecoveryPoint"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:getRecoveryPointRestoreMetadata",
        "ResultSelector": {
          "file-system-id.$": "$.RestoreMetadata.file-system-id"
        },
        "ResultPath": "$.ResourceProperties.metadata"
      },
      "CreateFileSystem": {
        "Type": "Task",
        "Parameters": {
          "CreationToken": null,
          "AvailabilityZoneName.$": "$.AvailabilityZoneName",
          "Backup": true,
          "Encrypted.$": "$.Encrypted",
          "KmsKeyId.$": "$.KmsKeyId",
          "PerformanceMode.$": "$.PerformanceMode",
          "ProvisionedThroughputInMibps.$": "$.ProvisionedThroughputInMibps",
          "Tags.$": "$.FileSystemTags",
          "ThroughputMode.$": "$.ThroughputMode"
        },
        "Resource": "arn:aws:states:::aws-sdk:efs:createFileSystem",
        "Next": "Wait 10 sec for efs state change",
        "InputPath": "$.ResourceProperties"
      },
      "StartRestoreJob": {
        "Type": "Task",
        "Next": "Wait 30 sec for job finished",
        "Parameters": {
          "IamRoleArn": "arn:aws:iam::918404900336:role/role2",
          "Metadata": {
            "file-system-id.$": "$.metadata.file-system-id",
            "Encrypted.$": "$.Encrypted",
            "KmsKeyId.$": "$.KmsKeyId",
            "PerformanceMode.$": "$.PerformanceMode",
            "newFileSystem": "true"
          },
          "RecoveryPointArn.$": "$.RecoveryPoint",
          "ResourceType": "EFS"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:startRestoreJob",
        "InputPath": "$.ResourceProperties"
      },
      "UpdateFileSystem": {
        "Type": "Task",
        "Parameters": {
          "FileSystemId.$": "$.PhysicalResourceId",
          "ProvisionedThroughputInMibps.$": "$.ResourceProperties.ProvisionedThroughputInMibps",
          "ThroughputMode.$": "$.ResourceProperties.ThroughputMode"
        },
        "Resource": "arn:aws:states:::aws-sdk:efs:updateFileSystem",
        "Next": "Wait 10 sec for efs state change"
      },
      "DeleteFileSystem": {
        "Type": "Task",
        "Parameters": {
          "FileSystemId.$": "$.PhysicalResourceId"
        },
        "Resource": "arn:aws:states:::aws-sdk:efs:deleteFileSystem",
        "Next": "Send response to cloud formation"
      },
      "Wait 30 sec for job finished": {
        "Type": "Wait",
        "Seconds": 5,
        "Next": "DescribeRestoreJob"
      },
      "DescribeRestoreJob": {
        "Type": "Task",
        "Next": "Restore job finished?",
        "Parameters": {
          "RestoreJobId": "MyData"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:describeRestoreJob"
      },
      "Wait 10 sec for efs state change": {
        "Type": "Wait",
        "Seconds": 5,
        "Next": "DescribeFileSystems"
      },
      "DescribeFileSystems": {
        "Type": "Task",
        "Parameters": {
          "FileSystemId.$": "$.FileSystemId"
        },
        "Resource": "arn:aws:states:::aws-sdk:efs:describeFileSystems",
        "Next": "EFS is available?"
      },
      "EFS is available?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.FileSystems[0].LifeCycleState",
            "StringEquals": "available",
            "Next": "Send response to cloud formation"
          }
        ],
        "Default": "Wait 10 sec for efs state change",
        "OutputPath": "$.FileSystems[0]"
      },
      "Send response to cloud formation": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:eu-central-1:918404900336:function:f1:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "End": true
      },
      "Restore job finished?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.d",
            "StringEquals": "dfdfd",
            "Next": "Send response to cloud formation"
          }
        ],
        "Default": "Wait 30 sec for job finished"
      }
    }
  }